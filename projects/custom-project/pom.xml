<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--
    -D 传入属性参数
    -P 使用pom中指定的配置
    -e 显示maven运行出错的信息
    -o 离线执行命令,即不去远程仓库更新包
    -X 显示maven允许的debug信息
    -U 强制去远程参考更新snapshot包
    -->


    <!-- 基本设置 Start -->
    <!-- 描述这个POM文件是遵从哪个版本的项目描述符。 -->
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>project-parent-pom</artifactId>
        <groupId>com.dxy.platform</groupId>
        <version>1.0</version>
        <relativePath>../project-parent-pom/pom.xml</relativePath>
    </parent>

    <artifactId>custom-project</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--
    打包的格式，可以为：pom , jar , maven-plugin , ejb , war , ear , rar , par

    web模块打包为war，子模块一般描述为pom
    -->
    <packaging>jar</packaging>

    <!--
    通用配置和变量描述，一般将和子模块之间通用的一些配置变量抽象描述出来
    -->
    <properties>
        <encoding>UTF-8</encoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <!-- 依赖管理 -->
    <dependencyManagement />

    <!-- 详细依赖描述 -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dxy.platform</groupId>
            <artifactId>common-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <!-- 基本设置 End -->


    <!-- 项目信息 Start -->
    <name>Customer::Project</name>

    <url>http://www.siblings.top/docs</url>

    <description>Maven 学习</description>

    <developers>
        <developer>
            <id>guoqy</id>
            <name>guoqy</name>
            <email>guoqy@dxy.cn</email>
            <url>http://www.siblings.top</url>
            <roles>
                <role>dev</role>
            </roles>
            <organization>dxy</organization>
            <organizationUrl>http://www.dxy.cn</organizationUrl>
            <properties>
                <project>cms</project>
            </properties>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>zengc</name>
            <email>zengc@dxy.cn</email>
            <url>http://www.siblings.top</url>
            <roles>
                <role>dev</role>
            </roles>
            <organization>dxy</organization>
            <organizationUrl>http://www.dxy.cn</organizationUrl>
            <properties>
                <project>cms</project>
            </properties>
            <timezone>+8</timezone>
        </contributor>
    </contributors>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.baidu.com/banseon/LICENSE-2.0.txt</url>
            <!--
                项目分发的主要方式：
                    repo，可以从Maven库下载
                    manual， 用户必须手动下载和安装依赖
            -->
            <distribution>repo</distribution>
            <!--关于license的补充信息-->
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <organization>
        <url>http://www.dxy.cn</url>
        <name>Dxy</name>
    </organization>

    <!-- 项目信息 End -->

    <!-- 构建设置 Start -->

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。-->
        <directory>${project.basedir}/target</directory>
        <outputDirectory>${project.basedir}/target/classes</outputDirectory>
        <testOutputDirectory>${project.basedir}/target/test-classes</testOutputDirectory>
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
        <!-- 默认的filter目录是${basedir}/src/main/fiters/ -->
        <filters>
            <filter>${project.basedir}/src/main/resources/fileter.properties</filter>
        </filters>


        <!--当项目没有规定目标（Maven2 叫做阶段）时的默认值-->
        <defaultGoal>clean</defaultGoal>

        <!-- 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。 -->
        <resources>
            <resource>
                <!-- 描述了资源的目标路径。
                该路径相对target/classes目录（例如${project.build.outputDirectory}）。
                举个例 子，如果你想资源在特定的包里(org.apache.maven.messages)，
                你就必须该元素设置为org/apache/maven /messages。
                然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。-->
                <targetPath>${project.basedir}/target/classes</targetPath>
                <!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。-->
                <filtering>true</filtering>
                <directory>${project.basedir}/src/main/resources</directory>

                <includes>
                    <include>maven-${env}.properties</include>
                </includes>
                <excludes>
                    <exclude>*.pm</exclude>
                </excludes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <targetPath>${project.basedir}/target/test-classes</targetPath>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>Print</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Empty Tasks" />
                            </target>
                            <tasks>
                                <echo>Profiles -&gt; Properties[${sourceEncoding}]</echo>
                                <echo>Profiles -&gt; [${env}]</echo>
                                <echo>Properties -&gt; [${encoding}]</echo>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                        <delimiter>${*}</delimiter>
                    </delimiters>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <!--
            跳过测试：
                -Darguments=-DskipTests
            使用-Dmaven.test.skip=true 是无效的


            release:clean 清除一些插件生成的相关文件
            release:prepare
                扫描项目依赖查看是否有SNAPSHOT, 是否存在未提交的文件, 确定当前release的版本号和下一个迭代的版本号, 插件会运行单元测试,
                 并向git中提交两次commit, 一次是release版本, 一次是下一个迭代的版本. 并将当前release版本打一个tag并提交到git上面去;
            release:perform
                正式发布提交
                默认会生成api文档，如果默写注释不符合规范的话会造成构建失败，可以加参数-DuseReleaseProfile=false取消构建api文档
                插件会执行mvn deploy 操作, 并clean掉生成的缓存文件
            release:rollback
                回滚，如果prepare的过程中出现了错误可以执行此命令回滚prepare的操作。
                有两点需要注意：一是在svn服务器上创建的tag无法删除；二是如果执行了release:clean命令的话，无法进行回滚
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <tagNameFormat>v${project.version}</tagNameFormat>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!-- 不使用默认的profile -->
                    <useReleaseProfile>false</useReleaseProfile>
                    <!--  在发布时不检查是否提交 svn 的文件过滤配置 -->
                    <checkModificationExcludes>
                        <checkModificationExclude>*.iml</checkModificationExclude>
                    </checkModificationExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.dxy.platform.plugin</groupId>
                <artifactId>customer-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <id>customer</id>
                        <phase>test</phase>
                        <goals>
                            <goal>custom</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <prefix>********* </prefix>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.plugin-tools</groupId>
                        <artifactId>maven-plugin-annotations</artifactId>
                        <version>3.3</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-statis-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>count</id>
                        <phase>test</phase>
                        <goals>
                            <goal>count</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>properties</include>
                    </includes>
                    <ratios>
                        <ratio>1.8</ratio>
                    </ratios>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <outputDirectory>${project.basedir}/target/site</outputDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <dependencyDetailsEnabled>true</dependencyDetailsEnabled>
                    <dependencyLocationsEnabled>true</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8</version>
            </plugin>
        </plugins>
    </reporting>

    <!-- 构建设置 End -->


    <!-- 环境设置 Start -->

    <!-- Bug 追踪系统 -->
    <issueManagement>
        <system>PM</system>
        <url>http://pm.dxy.net/my/page</url>
    </issueManagement>

    <!--
    Continuous integration
    持续集成
     -->
    <ciManagement>
        <system>Jenkins</system>
        <url>http://jk.dxy.net</url>
        <notifiers>
            <notifier>
                <type>email</type>
                <sendOnSuccess>true</sendOnSuccess>
                <sendOnError>true</sendOnError>
                <sendOnFailure>true</sendOnFailure>
                <sendOnWarning>true</sendOnWarning>
                <address>guoqy@dxy.cn</address>
                <configuration />
            </notifier>
        </notifiers>
    </ciManagement>

    <!-- 项目创建日期 -->
    <inceptionYear>2017</inceptionYear>

    <mailingLists>
        <mailingList>
            <name>guoqy</name>
            <post>guoqy@dxy.cn</post>
            <subscribe />
            <unsubscribe />
            <archive>http://mail.dxy.cn</archive>
            <otherArchives />
        </mailingList>
    </mailingLists>


    <!-- Source control Manage -->
    <scm>
        <url>git@github.com:g-smaller/maven-detailed</url>
        <connection>scm:git:git@github.com:g-smaller/maven-detailed.git</connection>
        <developerConnection>scm:git:git@github.com:g-smaller/maven-detailed.git</developerConnection>
        <tag>dev</tag>
    </scm>


    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <sourceEncoding>UTF-8</sourceEncoding>
                <env>dev</env>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>product</id>
            <properties>
                <sourceEncoding>UTF-8</sourceEncoding>
                <env>product</env>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>public</id>
            <url>http://182.92.236.19:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>Ali Plugin</id>
            <url>http://182.92.236.19:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>nexus-releases</name>
            <url>http://182.92.236.19:8081/nexus/content/repositories/releases/</url>
            <uniqueVersion>true</uniqueVersion>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>nexus-snapshots</name>
            <url>http://182.92.236.19:8081/nexus/content/repositories/snapshots/</url>
            <uniqueVersion>true</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <!-- 环境设置 End -->

</project>